version: '3.8'
services:

  backend:
    tty: true
    stdin_open: true
    build:
      context: ./backend
      target: base
    container_name: studyapp_backend
    volumes:
      - ./backend/src:/go/src/studyapp
    ports:
      - 8888:8080
    depends_on:
      - mysql
      - redis

  backend_nginx:
    image: nginx:latest
    container_name: studyapp_backend_nginx
    restart: always
    volumes:
      - ./backend/nginx/default.conf:/etc/nginx/nginx.conf
    ports:
      - 88:80
    depends_on:
      - backend

  mysql:
    image: mysql:8.0
    container_name: studyapp_mysql
    restart: always
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: studyapp_development
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/provisioning/initdb:/docker-entrypoint-initdb.d
    ports:
      - 33060:3306

  redis:
    image: redis:latest
    container_name: studyapp_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - 63790:6379

  minio:
    image: minio/minio:latest
    container_name: studyapp_minio
    environment:
      MINIO_ACCESS_KEY: studyapp_access_key
      MINIO_SECRET_KEY: studyapp_secret_key
    command: server /export
    volumes:
      - minio_data:/export
      - ./backend/minio/config:/root/.minio
    ports:
      - 9000:9000

  minio_mc:
    image: minio/mc
    container_name: studyapp_minio_mc
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add studyapp_host http://minio:9000 studyapp_access_key studyapp_secret_key) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb studyapp_host/studyapp-development-private;
      /usr/bin/mc policy set download studyapp_host/studyapp-development-private;
      exit 0;
      "
    depends_on:
      - minio

  swagger_ui:
    image: swaggerapi/swagger-ui
    container_name: studyapp_swagger_ui
    ports:
      - 8060:8080
    volumes:
      - ./backend/openapi/openapi.yml:/openapi.yml
    environment:
      SWAGGER_JSON: /openapi.yml
      API_URL: openapi.yml

  swagger_editor:
    image: swaggerapi/swagger-editor
    container_name: studyapp_swagger_editor
    ports:
      - 8061:8080

  prism:
    image: stoplight/prism
    container_name: studyapp_prism_mock
    ports:
      - 8062:4010
    command: mock -h 0.0.0.0 -d /openapi.yml
    volumes:
      - ./backend/openapi/openapi.yml:/openapi.yml

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
